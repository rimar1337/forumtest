/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SearchRouteImport } from './routes/search'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CallbackIndexRouteImport } from './routes/callback/index'
import { Route as FForumHandleRouteImport } from './routes/f/$forumHandle'
import { Route as FForumHandleIndexRouteImport } from './routes/f/$forumHandle/index'
import { Route as FForumHandleTUserHandleTopicRKeyRouteImport } from './routes/f/$forumHandle/t/$userHandle/$topicRKey'

const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CallbackIndexRoute = CallbackIndexRouteImport.update({
  id: '/callback/',
  path: '/callback/',
  getParentRoute: () => rootRouteImport,
} as any)
const FForumHandleRoute = FForumHandleRouteImport.update({
  id: '/f/$forumHandle',
  path: '/f/$forumHandle',
  getParentRoute: () => rootRouteImport,
} as any)
const FForumHandleIndexRoute = FForumHandleIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => FForumHandleRoute,
} as any)
const FForumHandleTUserHandleTopicRKeyRoute =
  FForumHandleTUserHandleTopicRKeyRouteImport.update({
    id: '/t/$userHandle/$topicRKey',
    path: '/t/$userHandle/$topicRKey',
    getParentRoute: () => FForumHandleRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/search': typeof SearchRoute
  '/f/$forumHandle': typeof FForumHandleRouteWithChildren
  '/callback': typeof CallbackIndexRoute
  '/f/$forumHandle/': typeof FForumHandleIndexRoute
  '/f/$forumHandle/t/$userHandle/$topicRKey': typeof FForumHandleTUserHandleTopicRKeyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/search': typeof SearchRoute
  '/callback': typeof CallbackIndexRoute
  '/f/$forumHandle': typeof FForumHandleIndexRoute
  '/f/$forumHandle/t/$userHandle/$topicRKey': typeof FForumHandleTUserHandleTopicRKeyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/search': typeof SearchRoute
  '/f/$forumHandle': typeof FForumHandleRouteWithChildren
  '/callback/': typeof CallbackIndexRoute
  '/f/$forumHandle/': typeof FForumHandleIndexRoute
  '/f/$forumHandle/t/$userHandle/$topicRKey': typeof FForumHandleTUserHandleTopicRKeyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/search'
    | '/f/$forumHandle'
    | '/callback'
    | '/f/$forumHandle/'
    | '/f/$forumHandle/t/$userHandle/$topicRKey'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/search'
    | '/callback'
    | '/f/$forumHandle'
    | '/f/$forumHandle/t/$userHandle/$topicRKey'
  id:
    | '__root__'
    | '/'
    | '/search'
    | '/f/$forumHandle'
    | '/callback/'
    | '/f/$forumHandle/'
    | '/f/$forumHandle/t/$userHandle/$topicRKey'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SearchRoute: typeof SearchRoute
  FForumHandleRoute: typeof FForumHandleRouteWithChildren
  CallbackIndexRoute: typeof CallbackIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/callback/': {
      id: '/callback/'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/f/$forumHandle': {
      id: '/f/$forumHandle'
      path: '/f/$forumHandle'
      fullPath: '/f/$forumHandle'
      preLoaderRoute: typeof FForumHandleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/f/$forumHandle/': {
      id: '/f/$forumHandle/'
      path: '/'
      fullPath: '/f/$forumHandle/'
      preLoaderRoute: typeof FForumHandleIndexRouteImport
      parentRoute: typeof FForumHandleRoute
    }
    '/f/$forumHandle/t/$userHandle/$topicRKey': {
      id: '/f/$forumHandle/t/$userHandle/$topicRKey'
      path: '/t/$userHandle/$topicRKey'
      fullPath: '/f/$forumHandle/t/$userHandle/$topicRKey'
      preLoaderRoute: typeof FForumHandleTUserHandleTopicRKeyRouteImport
      parentRoute: typeof FForumHandleRoute
    }
  }
}

interface FForumHandleRouteChildren {
  FForumHandleIndexRoute: typeof FForumHandleIndexRoute
  FForumHandleTUserHandleTopicRKeyRoute: typeof FForumHandleTUserHandleTopicRKeyRoute
}

const FForumHandleRouteChildren: FForumHandleRouteChildren = {
  FForumHandleIndexRoute: FForumHandleIndexRoute,
  FForumHandleTUserHandleTopicRKeyRoute: FForumHandleTUserHandleTopicRKeyRoute,
}

const FForumHandleRouteWithChildren = FForumHandleRoute._addFileChildren(
  FForumHandleRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SearchRoute: SearchRoute,
  FForumHandleRoute: FForumHandleRouteWithChildren,
  CallbackIndexRoute: CallbackIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
